import { createCipheriv, createHash, pseudoRandomBytes, createHmac } from 'crypto';

export function encrypt(plainText: string) {
    if (!plainText) {
        return false;
    }

    const key = createHash('sha256', 'Kartini@2021');
    const iv = pseudoRandomBytes(16);
    const cipherText = opensslEncrypt(plainText, 'AES-256-CBC', key, 1, iv.toString());
    const hash = createHmac('sha256', key).update(cipherText);

    return Buffer.from(iv + hash + cipherText).toString('base64');
}

function opensslEncrypt(plainText: string, encryptionMethod: string, secret: string, iv: string) {
    const encryptor = createCipheriv(encryptionMethod, secret, iv);

    return encryptor.update(plainText, 'utf8', 'base64') + encryptor.final('base64');
};
